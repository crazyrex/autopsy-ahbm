/**
 * This work is made available under the Apache License, Version 2.0.
 *
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.pcbje.ahbm.matchable;

import com.pcbje.ahbm.CaseWrapper;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import javax.swing.JPanel;
import org.sleuthkit.datamodel.Content;
import org.sleuthkit.datamodel.TskCoreException;

/**
 *
 * @author pcbje
 */
public class BuflDiffResult extends javax.swing.JFrame {

    public BuflDiffResult(Content content1, Content content2) throws IOException, TskCoreException {
        initComponents();

        setTitle("BuflDiff .1");

        CaseWrapper caseWrapper = new CaseWrapper();

        File file1 = File.createTempFile(content1.getName(), "bufl");
        File file2 = File.createTempFile(content2.getName(), "bufl");

        filename1.setText(content1.getUniquePath());
        filename2.setText(content2.getUniquePath());

        size1.setText(getSizeStr(content1.getSize()));
        size2.setText(getSizeStr(content2.getSize()));

        if (content1.getSize() > content2.getSize()) {
            maxSize.setText(getSizeStr(content1.getSize()));
        } else {
            maxSize.setText(getSizeStr(content2.getSize()));
        }

        FileOutputStream fos1 = new FileOutputStream(file1);
        caseWrapper.readFile(fos1, 1024, content1);
        fos1.close();

        FileOutputStream fos2 = new FileOutputStream(file2);
        caseWrapper.readFile(fos2, 1024, content2);
        fos2.close();

        BufferedImage image = new BuflDiff().getSimilarityImage(file1.getAbsolutePath(), file2.getAbsolutePath(), "400", "50");

        ((ImagePanel) imageContainer).setImage(image);

        imageContainer.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        filename1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        filename2 = new javax.swing.JLabel();
        imageContainer = new ImagePanel();
        jLabel5 = new javax.swing.JLabel();
        maxSize = new javax.swing.JLabel();
        size1 = new javax.swing.JLabel();
        size2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(BuflDiffResult.class, "BuflDiffResult.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(filename1, org.openide.util.NbBundle.getMessage(BuflDiffResult.class, "BuflDiffResult.filename1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(BuflDiffResult.class, "BuflDiffResult.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(filename2, org.openide.util.NbBundle.getMessage(BuflDiffResult.class, "BuflDiffResult.filename2.text")); // NOI18N

        imageContainer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        imageContainer.setPreferredSize(new java.awt.Dimension(400, 50));

        javax.swing.GroupLayout imageContainerLayout = new javax.swing.GroupLayout(imageContainer);
        imageContainer.setLayout(imageContainerLayout);
        imageContainerLayout.setHorizontalGroup(
            imageContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );
        imageContainerLayout.setVerticalGroup(
            imageContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(BuflDiffResult.class, "BuflDiffResult.jLabel5.text")); // NOI18N

        maxSize.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(maxSize, org.openide.util.NbBundle.getMessage(BuflDiffResult.class, "BuflDiffResult.maxSize.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(size1, org.openide.util.NbBundle.getMessage(BuflDiffResult.class, "BuflDiffResult.size1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(size2, org.openide.util.NbBundle.getMessage(BuflDiffResult.class, "BuflDiffResult.size2.text")); // NOI18N

        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(BuflDiffResult.class, "BuflDiffResult.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(imageContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filename1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filename2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(size1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(size2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel2)
                        .addGap(40, 40, 40)
                        .addComponent(maxSize, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(filename1)
                    .addComponent(size1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(filename2)
                    .addComponent(size2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imageContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(maxSize)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel filename1;
    private javax.swing.JLabel filename2;
    private javax.swing.JPanel imageContainer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel maxSize;
    private javax.swing.JLabel size1;
    private javax.swing.JLabel size2;
    // End of variables declaration//GEN-END:variables

    public static String getSizeStr(long size) {
        DecimalFormat numberFormat = new DecimalFormat("#.0");

        if (size < 1024) {
            return size + "B";
        } else if (size < 1024 * 1024) {
            return numberFormat.format((float) size / (1024)) + "KB";
        } else if (size < 1024 * 1024 * 1024) {
            return numberFormat.format((float) size / (1024 * 1024)) + "MB";
        } else {
            return numberFormat.format((float) size / (1024 * 1024 * 1024)) + "GB";
        }
    }

    private class ImagePanel extends JPanel {

        BufferedImage image;

        public void setImage(BufferedImage image) {
            this.image = image;
        }

        @Override
        public void paintComponent(Graphics g) {
            super.paintComponent(g);

            g.drawImage(image, 0, 0, null);
        }
    }
}
